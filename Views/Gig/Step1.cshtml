@{
ViewData["Title"] = "Create new Service";
Layout = "~/Views/Shared/_SellerLayout.cshtml";
}

<div class="nav-step">
    <nav>
        <ul class="ul-step">
            <li class="wrapper-li-step">
                <div class="li-step" style="background-color: #1dbf73;">â¦¿</div>
                <div class="li-content">Overview ></div>
            </li>
            <li class="wrapper-li-step">
                <div class="li-step">2</div>
                <div class="li-content">Pricing ></div>
            </li>
            <li class="wrapper-li-step">
                <div class="li-step">3</div>
                <div class="li-content">Description ></div>
            </li>
            <li class="wrapper-li-step">
                <div class="li-step">4</div>
                <div class="li-content">Publish</div>
            </li>
        </ul>
    </nav>
</div>

<div class="content-crt-src content">
    <div class="container-step1">
        <form action="CreateServiceStep1" method="post" class="form-step1">
            <div class="flex">
                <div class="left-content-step1"><label for="">Gig Title</label></div>
                <div class="right-content-step1">
                    <Textarea placeholder="I will do something I'm really good at" maxlength="80"
                        name="title"></Textarea>
                </div>
            </div>
            <br>
            <div class="flex">
                <div class="left-content-step1"><label for="">Category</label></div>
                <div class="right-content-step1">
                    <select name="category" id="parentCategory" class="ListCategory">
                        @foreach (var item in  ViewBag.listcategory)
                        {
                            <option name="@item.CategoryName">@item.CategoryName </option>
                        }
                    </select>
                    <select name="subcategory" id="subCategory" class="ListCategory">
                        @if(ViewBag.subcategory!= null)
                        {
                            @foreach (var item in  ViewBag.subcategory)
                            {
                                <option name="@item.CategoryId">@item.CategoryName</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <br>
            <div class="flex">
                <div class="left-content-step1"><label for="">Tags</label></div>
                <div class="right-content-step1" id="wrap-compose">
                    <div class="tag-container">
                        <input id="reciverName">
                        <input type="hidden" id="tags" name="tag">
                    </div>
                </div>
            </div>
            <br>
            <button class="btn-continue" id="sendEmail">Save and continue</button>
        </form>
    </div>
</div>
<script>
           
    $(document).ready(function () {
    $("#parentCategory").change(function () {
    
            $('#subCategory').html('');
            $.ajax({
                type: "POST",
                data: {
                    categoryName: this.value
                },
                url: "/admin/GetListSubCategoryByCategoryParentId",
                success: function (result) {
                    $('#subCategory').stop().animate({ "opacity": "0" }, 0, function () {
                        // After first animation finished
                        $(this).html(
                            result.map((res) => {
                                return `<option name=${res.categoryName}>${res.categoryName}</option>`
                            })
                        ).animate({ opacity: 1 });
                    });
                }
            });
        });
    });
  const tagContainer = document.querySelector('.tag-container');
const input = document.querySelector('.tag-container input');
const inputHidden = document.querySelector('.tag-container #tags');
var tags = [];

function createTag(label) {
    const div = document.createElement('div');
    div.setAttribute('class', 'tag')
    const span = document.createElement('span');
    span.innerHTML = label;
    const closeBtn = document.createElement('i');
    closeBtn.setAttribute('class', 'material-icons');
    closeBtn.setAttribute('data-item', label);
    closeBtn.innerHTML = 'close';

    div.appendChild(span);
    div.appendChild(closeBtn);
    return div;
}
function reset() {
    document.querySelectorAll('.tag').forEach(function (tag) {
        tag.parentElement.removeChild(tag);
    })
}
function addTags() {
    reset();
    tags.slice().reverse().forEach(function (tag) {
        const input = createTag(tag);
        tagContainer.prepend(input);
    });
}
input.addEventListener('keydown', (e) => {
    if (e.key === 'Enter') {
        e.preventDefault();
        tags.push(input.value);
        addTags();
        input.value = '';
        inputHidden.value = tags.join();
    }
    return false;
})
document.addEventListener('click', function (e) {
    if (e.target.tagName === 'I') {
        const value = e.target.getAttribute('data-item');
        const index = tags.indexOf(value);
        // debugger;
        tags = [...tags.slice(0, index), ...tags.slice(index + 1)];
        addTags();
    }
})
</script>