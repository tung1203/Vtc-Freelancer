@model Category;
@{
ViewData["Title"] = "Become Seller";
}
<div class="wrapper-become-seller container-inner">
   <form method="POST" action="/BecomeSeller" class="form-become-seller">
      <div class="header-desciption">
         <h2>
            Become Seller
         </h2>
         <p id="detail-description">
            Tell us a bit about yourself. This information will appear on your public profile, so that potential buyers
            can
            get to
            know you better.
         </p>
      </div>
      <br>
      @if (@ViewBag.Noti == true)
      {

      }
      <div class="flex wrapper-seller-become">
         <div class="left-content">
            <h3>
               Your Description
            </h3>
         </div>
         <div class="right-content">
            <textarea class="text-sel" rows="5" cols="20" name="Description"
               placeholder="Enter Description About You"></textarea>
         </div>
      </div>
      <div class="flex wrapper-seller-become">
         <div class="left-content">
            <h3>
               Language
            </h3>
         </div>
         <div class="right-content">
            <select class="select-become-seller" name="Language">
               <option name="Vietnam">Vietnam</option>
               <option name="Japan">Japan</option>
               <option name="China">China</option>
               <option name="Korea">Korea</option>
            </select>
         </div>
      </div>
      <div class="flex wrapper-seller-become">
         <div class="left-content">
            <h3>
               Level Language
            </h3>
         </div>
         <div class="right-content">
            <select class="select-become-seller" name="Level">
               <option value="0">Unspecified</option>
               <option value="1">Basic</option>
               <option value="2">Conversational</option>
               <option value="3">Fluent</option>
               <option value="4">Native/Bilingual</option>
            </select>
         </div>
      </div>


      <div class="flex wrapper-seller-become">
         <div class="left-content">
            <h3>
               Category Name
            </h3>
         </div>
         <div class="right-content">
            @if(ViewBag.listcategory != null)
            {
            <select class="select-become-seller" name="CategoryName" id="parentCategory">
               @foreach (var item in ViewBag.listcategory)
               {
               <option name="@item.CategoryName">@item.CategoryName </option>
               }
            </select>
            }

            <br>
            <br>
            <label>
               Sub Category
            </label>
            <div id="subCategory">
               @if(ViewBag.subcategory!= null)
               {
               @foreach (var item in ViewBag.subcategory)
               {
               <input type="checkbox" name="@item.CategoryName" value="@item.CategoryId">@item.CategoryName<br>

               }
               }
            </div>
            <br>
         </div>
      </div>



      <div class="flex wrapper-seller-become">
         <div class="left-content">
            <h3>
               Skill
            </h3>
         </div>
         <div class="right-content">
            <div class="tag-container">
               <input id="reciverName">
               <input type="hidden" id="tags" name="SkillName" class="select-become-seller">
            </div>
            <br>
            <br>
            <select class="select-become-seller" name="Level">
               <option value="0">Beginner</option>
               <option value="1">Intermediate</option>
               <option value="2">Expert</option>
            </select>
         </div>
      </div>



      <br>
      <br>
      <button class="btn-continue" id="but" onclick="login()">Continue</button>
      <br>

   </form>
</div>
<script>
   $(document).ready(function () {
      $("#parentCategory").change(function () {

         $('#subCategory').html('');
         $.ajax({
            type: "POST",
            data: {
               categoryName: this.value
            },
            url: "/admin/GetListSubCategoryByCategoryParentId",
            success: function (result) {
               $('#subCategory').stop().animate({ "opacity": "0" }, 0, function () {
                  // After first animation finished
                  $(this).html(
                     result.map((res) => {
                        return `<input type="checkbox" name="${res.categoryName}" value="${res.CategoryId}">${res.categoryName}<br>`
                     })
                  ).animate({ opacity: 1 });
               });
            }
         });
      });
   });
   const tagContainer = document.querySelector('.tag-container');
const input = document.querySelector('.tag-container input');
const inputHidden = document.querySelector('.tag-container #tags');
var tags = [];

function createTag(label) {
    const div = document.createElement('div');
    div.setAttribute('class', 'tag')
    const span = document.createElement('span');
    span.innerHTML = label;
    const closeBtn = document.createElement('i');
    closeBtn.setAttribute('class', 'material-icons');
    closeBtn.setAttribute('data-item', label);
    closeBtn.innerHTML = 'close';

    div.appendChild(span);
    div.appendChild(closeBtn);
    return div;
}
function reset() {
    document.querySelectorAll('.tag').forEach(function (tag) {
        tag.parentElement.removeChild(tag);
    })
}
function addTags() {
    reset();
    tags.slice().reverse().forEach(function (tag) {
        const input = createTag(tag);
        tagContainer.prepend(input);
    });
}
input.addEventListener('keydown', (e) => {
    if (e.key === 'Enter') {
        e.preventDefault();
        tags.push(input.value);
        addTags();
        input.value = '';
        inputHidden.value = tags.join();
    }
    return false;
})
document.addEventListener('click', function (e) {
    if (e.target.tagName === 'I') {
        const value = e.target.getAttribute('data-item');
        const index = tags.indexOf(value);
        // debugger;
        tags = [...tags.slice(0, index), ...tags.slice(index + 1)];
        addTags();
    }
})
</script>