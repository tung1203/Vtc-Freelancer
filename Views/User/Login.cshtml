@{
ViewData["Title"] = "Login";
Layout = "~/Views/Shared/_Login.cshtml";
}

    <div id="logreg-forms">
        <form class="form-signin" method="POST" action="/Login">
            <h1 class="h3 mb-3 font-weight-normal" style="text-align: center"> Sign in to VTC Freelancer</h1>
            <br />
            <div class="social-login">
<fb:login-button 
  scope="public_profile,email"
  onlogin="checkLoginState();">
</fb:login-button>
<button onclick="logout()">Logout</button>
                <button class="btn facebook-btn social-btn" type="button"><span><i class="fa fa-facebook-f"></i> Sign in with Facebook</span> </button>
                <button class="btn google-btn social-btn" type="button"><span><i class="fa fa-google-plus-g"></i> Sign in with Google+</span> </button>
            </div>
            <p style="text-align:center"> OR  </p>
            <input type="text" id="inputEmail" class="form-control" name="email" placeholder="Email or UserName" required="" autofocus="">
            <p style="color:red">@ViewBag.Error</p>
            <input type="password" id="inputPassword" class="form-control" name="password" placeholder="Password" required="">
            <p style="color:red">@ViewBag.Error1</p>
            <p style="color:red">@ViewBag.Accountlocked </p>
            <button class="btn btn-success btn-block" type="submit"><i class="fas fa-sign-in-alt"></i> Sign in</button>
            <a href="#" id="forgot_pswd">Forgot password?</a>
            <hr>
            <!-- <p>Don't have an account!</p>  -->
            <a href="/Register"><button class="btn btn-register btn-block" type="button" id="btn-signup"><i class="fa fa-user-plus"></i> Sign up New Account</button></a>
            </form>

          
            <br>
            
    </div>
  
       

<script>
function statusChangeCallback(response) {  // Called with the results from FB.getLoginStatus().
    console.log('statusChangeCallback');
    console.log(response);                   // The current login status of the person.
    if (response.status === 'connected') {   // Logged into your webpage and Facebook.
      testAPI();  
    } else {                                 // Not logged into your webpage or we are unable to tell.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this webpage.';
    }
  }
  window.fbAsyncInit = function() {
    FB.init({
      appId      : '802573856856059',
      cookie     : true,
      xfbml      : true,
      version    : 'v5.0'
    });
      
    FB.AppEvents.logPageView();   
      
  };

  (function(d, s, id){
     var js, fjs = d.getElementsByTagName(s)[0];
     if (d.getElementById(id)) {return;}
     js = d.createElement(s); js.id = id;
     js.src = "https://connect.facebook.net/en_US/sdk.js";
     fjs.parentNode.insertBefore(js, fjs);
   }(document, 'script', 'facebook-jssdk'));
   
function checkLoginState() {
  FB.getLoginStatus(function(response) {
     statusChangeCallback(response);
  });
}
function logout() {
  FB.logout(function(response) {
  console.log(response);
});
}

  function testAPI() {                      // Testing Graph API after login.  See statusChangeCallback() for when this call is made.
    console.log('Welcome!  Fetching your information.... ');
    
    FB.api('/me','GET',{"fields":"id,name,email,first_name,last_name"}, function(response) {
      console.log(response);
    });
  }

</script>
 
